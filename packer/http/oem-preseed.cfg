d-i debconf/priority string critical
ubiquity oem-config/enable boolean true

### Localization
d-i debian-installer/locale string en_US.UTF-8
d-i console-setup/ask_detect boolean false
d-i console-setup/layoutcode string us
ubiquity countrychooser/shortlist select US
ubiquity languagechooser/language-name select English
ubiquity localechooser/supported-locales multiselect en_US.UTF-8

ubiquity oem-config/id string JMUCS

# Keyboard selection.
d-i keyboard-configuration/ask_detect boolean false
d-i keyboard-configuration/layoutcode string us

ubiquity oem-config/extra_packages boolean false

# If one of the disks that are going to be automatically partitioned
# contains an old LVM configuration, the user will normally receive a
# warning. This can be preseeded away...
d-i partman-lvm/device_remove_lvm boolean true
# The same applies to pre-existing software RAID array:
d-i partman-md/device_remove_md boolean true
# And the same goes for the confirmation to write the lvm partitions.
d-i partman-lvm/confirm boolean true
d-i partman-lvm/confirm_nooverwrite boolean true

# You can choose one of the three predefined partitioning recipes:
# - atomic: all files in one partition
# - home:   separate /home partition
# - multi:  separate /home, /var, and /tmp partitions
d-i partman-auto/choose_recipe select atomic

# In addition, you'll need to specify the method to use.
# The presently available methods are:
# - regular: use the usual partition types for your architecture
# - lvm:     use LVM to partition the disk
# - crypto:  use LVM within an encrypted partition
d-i partman-auto/method string regular

# This makes partman automatically partition without confirmation, provided
# that you told it what to do using one of the methods above.
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true

# This is fairly safe to set, it makes grub install automatically to the MBR
# if no other operating system is detected on the machine.
d-i grub-installer/only_debian boolean true

# This one makes grub-installer install to the MBR if it also finds some other
# OS, which is less safe as it might not be able to boot that other OS.
d-i grub-installer/with_other_os boolean true

# To install to the first device (assuming it is not a USB stick):
d-i grub-installer/bootdev  string default

### Clock and time zone setup
d-i clock-setup/utc boolean true
d-i time/zone string US/Eastern
d-i clock-setup/ntp boolean true

# Any hostname and domain names assigned from dhcp take precedence over
# values set here. However, setting the values still prevents the questions
# from being shown, even if values come from dhcp.
d-i netcfg/get_hostname string cs-vm
d-i netcfg/get_domain string localdomain

# To create a normal user account.
d-i passwd/user-fullname string oem
d-i passwd/username string oem
d-i passwd/user-password-crypted password $1$.WsfKhkz$G/3ZFe1ZGQrJJJ7GoJ.vY.

# netcfg will choose an interface that has link if possible. This makes it
# skip displaying a list if there is more than one interface.
#d-i netcfg/choose_interface select auto
#d-i netcfg/use_autoconfig boolean auto

# Configure rc.local to trigger the installation of openssh-server following reboot
# to allow packer to access the machine to complete provisioning, see
# https://forums.linuxmint.com/viewtopic.php?t=236838 for details

ubiquity ubiquity/success_command string svcfile="/target/etc/systemd/system/ssh-install.service"; \
    touch "$svcfile"; \
    echo "[Unit]"                                                        >> "$svcfile"; \
    echo "After=network-online.target"                                   >> "$svcfile"; \
    echo "[Service]"                                                     >> "$svcfile"; \
    echo "ExecStartPre=/usr/bin/apt-get update"                          >> "$svcfile"; \
    echo "ExecStart=/usr/bin/apt-get -y install openssh-server"          >> "$svcfile"; \
    echo "ExecStartPost=/bin/systemctl disable ssh-install.service"      >> "$svcfile"; \
    echo "ExecStartPost=/bin/rm /etc/systemd/system/ssh-install.service" >> "$svcfile"; \
    echo "[Install]"                                                     >> "$svcfile"; \
    echo "WantedBy=multi-user.target"                                    >> "$svcfile"; \
    in-target systemctl enable ssh-install.service

# This will prevent the installer from ejecting the CD during the reboot,
# which is useful in some situations.
d-i cdrom-detect/eject boolean true

# complete the installation automatically.
ubiquity ubiquity/summary note
# Avoid that last message about the install being complete.
d-i finish-install/reboot_in_progress note

ubiquity ubiquity/reboot boolean true

#Cause an installer crash toward the end
#ubiquity ubiquity/hide_slideshow boolean true
