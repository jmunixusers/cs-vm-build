---
# tasks file for common

# All tasks in this file should be able to be run as part of the OEM or common
# role without error as common is used in both of those.

- name: Check Ubuntu release
  ansible.builtin.set_fact:
    ubuntu_release: "{{ lookup('ini', 'UBUNTU_CODENAME type=properties file=/etc/os-release') }}"

- name: Process all pending installs
  ansible.builtin.command: /usr/bin/dpkg --configure -a
  register: dpkg_command
  changed_when: dpkg_command.stdout
  environment:
    DEBIAN_FRONTEND: noninteractive
- name: Ensure log directory exists
  ansible.builtin.file:
    path: "{{ log_directory }}"
    state: directory
    mode: "0755"
- name: Create directory for shared data
  ansible.builtin.file:
    path: "{{ share_directory }}"
    state: directory
    owner: root
    group: root
    mode: "0755"

# The policy file must go in /usr/share/polkit-1. It is the only location that
# policykit checks
- name: Install policykit policy for Ansible wrapper
  ansible.builtin.copy:
    src: edu.jmu.uug.ansiblewrapper.policy
    dest: /usr/share/polkit-1/actions/
    mode: "0644"
- name: Install Ansible wrapper GUI script
  ansible.builtin.template:
    src: uug_ansible_wrapper.py
    dest: '{{ uug_ansible_wrapper }}'
    mode: "0755"
- name: Install JMU-colored Tux icon
  ansible.builtin.copy:
    src: jmu-tux.svg
    dest: "/usr/share/icons/hicolor/scalable/apps/{{ tux_icon_name }}.svg"
    mode: "0644"
  notify: Update icon cache

- name: Ensure local applications folder exists
  ansible.builtin.file:
    path: "{{ wrapper_desktop_file_path }}"
    state: directory
    mode: "0755"
- name: Copy shortcut to desktop file directory
  ansible.builtin.template:
    src: desktop-template.desktop.j2
    dest: "{{ wrapper_desktop_file_path }}/jmucs_config.desktop"
    mode: "0755"

- name: Set Ubuntu mirrors
  ansible.builtin.template:
    src: ubuntu-mirrors.j2
    dest: "{{ mirror_file_path.ubuntu }}"
    mode: "0644"
    owner: root
    group: root

- include_tasks: ubuntu_only.yml
  when: "ansible_distribution == 'Ubuntu'"
- include_tasks: mint_only.yml
  when: "ansible_distribution == 'Linux Mint'"
- name: Refresh apt cache
  ansible.builtin.apt:
    update_cache: yes
  register: apt_update
  retries: 100
  until: apt_update is success or ('Failed to lock apt for exclusive operation' not in apt_update.msg and '/var/lib/dpkg/lock' not in apt_update.msg)
