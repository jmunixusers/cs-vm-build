---
# tasks file for common

# All tasks in this file should be able to be run as part of the OEM or common
# role without error as common is used in both of those.

- name: Set OEM facts
  set_fact:
    base_path: "{{ oem_base_path }}"
    icon_path: "/etc/skel/Desktop"
    file_mode: 0755
  when: icon_mode == 'oem'
- name: Set user facts
  set_fact:
    base_path: "{{ global_base_path }}"
    icon_path: "/usr/local/share/applications"
    file_mode: 0644
  when: icon_mode == 'user'
- name: Set bin fact
  set_fact:
    bin_path: '{{ base_path }}/vmtools/bin'
- name: Set wrapper fact
  set_fact:
    uug_ansible_wrapper: '{{ bin_path }}/uug_ansible_wrapper.py'
- name: Check Ubuntu release
  set_fact:
    ubuntu_release: "{{ lookup('ini', 'UBUNTU_CODENAME type=properties file=/etc/os-release') }}"

- name: Process all pending installs
  command: /usr/bin/dpkg --configure -a
  register: dpkg_command
  changed_when: dpkg_command.stdout
  environment:
    DEBIAN_FRONTEND: noninteractive
- name: Create VMTools bin
  file:
    path: "{{ bin_path }}"
    state: directory
- name: Ensure desktop icon directory exists
  file:
    path: "{{ icon_path }}"
    state: directory
    mode: 0755
# The policy file must go in /usr/share/polkit-1. It is the only location that
# policykit checks
- name: Install policykit policy for Ansible wrapper
  copy:
    src: edu.jmu.uug.ansiblewrapper.policy
    dest: /usr/share/polkit-1/actions/
    mode: 0644
- name: Install Ansible wrapper GUI script
  copy:
    src: uug_ansible_wrapper.py
    dest: '{{ uug_ansible_wrapper }}'
    mode: 0755
- name: Install JMU Tux icon
  copy:
    src: jmu-tux.svg
    dest: "{{ base_path }}/jmu-tux.svg"
    mode: 0644
- name: Install JMU Tux globally
  copy:
    src: jmu-tux.svg
    dest: "/usr/share/icons/hicolor/scalable/apps/edu.jmu.uug.tux.svg"
    mode: 0644
  # Check 301 is disabled since there isn't a good way to verify whether or not the
  # database changed during the update.
- name: Update icon cache  # noqa 301
  command: /usr/sbin/update-icon-caches /usr/share/icons/*
- name: Copy shortcut to desktop file directory
  template:
    src: desktop-template.desktop.j2
    dest: "{{ icon_path }}/jmucs_config.desktop"
    mode: "{{ file_mode }}"
- name: Create directory for custom MintReport script
  file:
    path: /usr/share/linuxmint/mintreport/reports/001_Run-JMU-CS-Config-Tool
    mode: 0755
    owner: root
    group: root
    state: directory
  when: ansible_distribution == "Linux Mint"
- name: Install custom MintReport script
  copy:
    src: CustomMintReportInfo.py
    dest: /usr/share/linuxmint/mintreport/reports/001_Run-JMU-CS-Config-Tool/MintReportInfo.py
    mode: 0644
    owner: root
    group: root
  when: ansible_distribution == "Linux Mint"

- name: Set Ubuntu mirrors
  template:
    src: ubuntu.j2
    dest: /etc/apt/sources.list
    owner: root
    group: root
    mode: 0664
  when: ansible_distribution == "Ubuntu"
- name: Set Linux Mint mirrors
  template:
    src: mint.j2
    dest: /etc/apt/sources.list.d/official-package-repositories.list
    owner: root
    group: root
    mode: 0644
  when: ansible_distribution == "Linuxmint" or ansible_distribution == "Linux Mint"
- name: Refresh apt cache
  apt:
    update_cache: yes
  changed_when: false
  ignore_errors: yes
